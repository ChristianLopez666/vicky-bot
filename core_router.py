import logging

from integrations_gpt import ask_gpt

log = logging.getLogger("core_router")

# Mantener el mismo texto de men√∫ y opciones (1‚Äì8).
MENU_TEXT = (
    "Men√∫ de opciones:\n"
    "1. Informaci√≥n general üìå\n"
    "2. Horarios ‚è∞\n"
    "3. Precios üí∏\n"
    "4. Soporte t√©cnico üõ†Ô∏è\n"
    "5. Preguntas frecuentes ‚ùì\n"
    "6. Enlaces √∫tiles üîó\n"
    "7. Contacto üìû\n"
    "8. Notificar a Christian üîî\n\n"
    "Escribe el n√∫mero de la opci√≥n que deseas, o escr√≠beme tu consulta."
)


# Respuestas fijas para las opciones 1..7 y la confirmaci√≥n 8 (contiene exactamente "Notifiqu√© a Christian")
FIXED_RESPONSES = {
    "1": "Aqu√≠ tienes informaci√≥n general sobre Vicky Bot. ¬øQuieres que ampl√≠e alg√∫n punto?",
    "2": "Nuestros horarios son de lunes a viernes de 9:00 a 18:00. ¬øNecesitas atenci√≥n fuera de ese horario?",
    "3": "Los precios var√≠an seg√∫n el servicio. Escr√≠beme lo que necesitas y te doy una estimaci√≥n.",
    "4": "Para soporte t√©cnico, por favor describe el problema con detalle y te ayudar√©.",
    "5": "Consulta nuestra secci√≥n de FAQ o dime tu duda para que la responda.",
    "6": "Te comparto enlaces √∫tiles: https://example.com (ejemplo). ¬øQu√© buscas exactamente?",
    "7": "Puedes contactarnos por correo a contacto@example.com o aqu√≠ mismo. ¬øTe ayudo a crear un mensaje?",
    "8": "He tomado nota. Notifiqu√© a Christian.",
}


# Atajos de saludo que no deben disparar a GPT
_GREETINGS = {
    "hola",
    "buenas",
    "buenos d√≠as",
    "buenos dias",
    "buenas tardes",
    "buenas noches",
    "holi",
    "hello",
}


def route_message(wa_id: str, wa_e164_no_plus: str, text_in: str) -> str:
    """
    Procesa el mensaje entrante y devuelve la respuesta como texto en espa√±ol.
    - Atajos y men√∫ manejados localmente (sin llamar a GPT).
    - Consultas libres enviadas a ask_gpt con fallback s√≥lido.
    """
    text = (text_in or "").strip()
    if not text:
        return MENU_TEXT

    low = text.lower()

    # Atajo de saludos (no usar GPT)
    if low in _GREETINGS:
        return "¬°Hola! Soy *Vicky*. Escribe *menu* para ver opciones o dime en qu√© te ayudo."

    # Men√∫
    if low in {"menu", "men√∫"}:
        return MENU_TEXT

    # Opciones fijas 1..8
    if low in FIXED_RESPONSES:
        return FIXED_RESPONSES[low]

    # Consultas libres -> usar GPT con manejo de excepciones
    try:
        reply = ask_gpt(text)
        # ask_gpt ya devuelve mensajes en espa√±ol o mensajes de error en espa√±ol
        if reply:
            return reply
        return "‚ö†Ô∏è No pude procesar tu consulta en este momento. Por favor, escribe *menu* para ver las opciones disponibles."
    except Exception:
        log.exception("Fallo en GPT desde route_message")
        return "‚ö†Ô∏è No pude procesar tu consulta en este momento. Por favor, escribe *menu* para ver las opciones disponibles."